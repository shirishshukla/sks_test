properties([
  parameters([

    // Generic
    string(name: 'account', defaultValue: 'test', description: "message descriotion here..."),
    // desired nodes to be backup
    [$class: 'CascadeChoiceParameter',
      name: 'skip_jobs', choiceType: 'PT_CHECKBOX', description: 'Select jobs to be Skip.',
      filterLength: 1, filterable: false, referencedParameters: 'environment',
      script: [$class: 'GroovyScript',
          script: [
              classpath: [],
              sandbox: true,
              script: """
                  return['job1', 'job2', 'job3']
              """.stripIndent()
          ]
      ]
    ]
  ])
])


def remove_skip_jobs(def job_list, def skip_jobs) {
  println("--> remove jobs -> $skip_jobs")
  def job_list_skip = []
  job_list.each { job_name ->
    skip_jobs.split(',').each { skip_job ->
      if (job_name.toLowerCase().split('/')[-1].equals(skip_job)){
        job_list_skip.add(job_name)
        return
      }
    }
  }
  job_list = job_list - job_list_skip
  println("--After-> $job_list")
  return job_list
}

pipeline {
    agent any

    stages {
        stage('Hello') {
            steps {
                script {
                    a=10
                    echo "hello - $skip_jobs"
                }
                
            }
        }
    }
}
